import openai
import pyttsx3    # text to speech
import speech_recognition as sr # transcribe the audio to text

# Set your OpenAI API key
openai.api_key = "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"

# Initialize the text-to-speech engine
engine = pyttsx3.init()    #generate speech to text

# Function to transcribe audio to text
def transcribe_audio_to_text(filename): #filename is arg that is too be transcribe 
    recognizer = sr.Recognizer() #instance of sr this object will perform the speech recognizition 
    with sr.AudioFile(filename) as source: #with st to open the audio file specified by file name
        audio = recognizer.record(source) # record it 
    try:
        return recognizer.recognize_google(audio) # transcribe 
    except:
        print("Skipping unknown error")

# Function to generate response using GPT-3
def generate_response(prompt):
    response = openai.Completion.create(
        engine="text-davinci-003", # specfy the engine gpt
        prompt=prompt, 
        max_tokens=4000, # no of response word 4000 is max
        n=1, 
        stop=None,
        temperature=0.5, # randomness , predictablity
    )
    return response["choices"][0]["text"]

# Function to convert text to speech
def speak_text(text):
    engine.say(text) # text to audio
    engine.runAndWait() # waait to play the speak

def main():
    while True:
        # Wait for user to say "genius"
        print("Say 'genius' to start recording your question..., or stop to exit")
        with sr.Microphone() as source:
            recognizer = sr.Recognizer()
            audio = recognizer.listen(source) # record the audio
        try:
            transcription = recognizer.recognize_google(audio)
            if transcription.lower() == "genius":
                # Record audio
                filename = "input.wav"
                print("Say your question...")
                with sr.Microphone() as source:
                    recognizer = sr.Recognizer()
                    source.pause_threshold = 1
                    audio = recognizer.listen(source, phrase_time_limit=None, timeout=None)
                    with open(filename, "wb") as f:
                        f.write(audio.get_wav_data())

                # Transcribe audio to text
                text = transcribe_audio_to_text(filename)
                if text:
                    print(f"You said: {text}")
                    # check  for stop command 
                    if text.lower =="stop":
                        print("stopping the program...")
                        break

                    # Generate response using GPT-3
                    response = generate_response(text)
                    print(f"GPT-3 says: {response}")

                    # Read response using text-to-speech
                    speak_text(response)

        except Exception as e:
            print("An error: {}".format(e))

if __name__ == "__main__":
    main()
